#!/usr/bin/env node

var request  = require('request')
  , path     = require('path')
  // Fill these in if using deployed Hink
  , port     = 3000
  , base_url = 'localhost:'+ port
  , argc     = process.argv.length - 1  // wtf extra length batman?
  , method   = process.argv[2]
  , model    = process.argv[3]
  , category = process.argv[4]
  , title    = process.argv[5] || null
  , content  = process.argv[6] || null
  , usage    = "usage: cli <method> <model> <category>\n\t" +
                  "supplied methods\n\t- create\n\t- list\n\t- search"
   , url = path.join(base_url, model)  // initial value of the url


console.log("title: " + title + "\ncontent: " + content + "\n")
console.log("argc = " + argc)
//global options

// arg logic
if (argc < 3) {
  console.log(usage)
  process.exit()
} 
if (argc === 3) {
  // CAT_LIST - list of categories
  console.log("calling cat_list")

  request.get(url, function(err, res, body) {
    console.log(url)
    console.log(res)
    console.log(body)
    if (!err && res.statusCode == 200) {
      cPrint(body)
    }
  })
}
if (argc > 3) {
  //
  url = path.join(url, category)

  /* 
  ********** functionality ************
  */

  //CREATE
  if (method == 'create') {
    data = { title: title
          , content: content }
    var url = path.join(modelUrl, category)
    request.post(url, {form: data})
  }


  // LIST
  if (method == 'list') {
    console.log(url)
    request(url, function(err, res, body) {
      console.log(res)
      if (!err && res.statusCode == 200) {
        docs = JSON.parse(body)
        writeList(docs)
      }
    })
  }

  var writeList = function(docs) {
    // receive json list and print to stdout properly
    content_types = ['url', 'content', 'path']
    docs.forEach(function(doc) {
      if (doc.content) {
        body = doc.content
      }
      if (doc.url) {
        body = doc.url
      }
      if (doc.path) {
        body = doc.path
      }
      process.stdout.write(doc.title + '\n' + '\t- ' + body + '\n')
    })
  }

  var cPrint = function(str) {
    process.stdout.write(string + '\n')
  }
}
