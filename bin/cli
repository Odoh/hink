#!/usr/bin/env node

var request  = require('request')
  // Fill these in if using deployed Hink
  , port     = 3000
  , base_url = 'localhost:'+ port
  , argc     = process.argv.length - 1  // wtf extra length batman?
  , method   = process.argv[2]
  , model    = process.argv[3]
  , category = process.argv[4]
  , optArg1  = process.argv[5] || null
  , optArg2  = process.argv[6] || null
  , usage    = "usage: cli <method> <model> <category>\n\t" +
                  "supplied methods\n\t- create\n\t- list\n\t- search"


// arg logic
if (argc < 3) {
  request.get('http://' + base_url, function(err, res, body) {
    cPrint("models available: " + body + '\n\n' + usage)
    process.exit()
  })
}

url = 'http://' + base_url+'/'+model  // initial value of the url
if (argc === 3) {
  // CAT_LIST - list of categories
  request.get(url, function(err, res, body) {
    if (!err && res.statusCode == 200) {
      cPrint(body)
    }
  })
}
if (argc > 3) {
  //
  url = url + '/' + category

  //CREATE
  if (method == 'create') {
    data = { title: optArg1
           , content: optArg2 }
    request.post(url, {form: data})
  }


  // LIST
  if (method == 'list') {
    request.get(url, function(err, res, body) {
      if (!err && res.statusCode == 200) {
        docs = JSON.parse(body)
        writeList(docs)
      }
    })
  }
  // SEARCH
  if (method == 'search') {
    url = url + '/search/?q='+optArg1
    console.log(url)
    request.get(url, function(err, res, body) {
      if (!err && res.statusCode == 200) {
        docs = JSON.parse(body)
        writeList(docs)
      }
    })
  }
}


var writeList = function(docs) {
  // receive json list and print to stdout properly
  if (!docs) { process.stdout.write('no results\n'); process.exit() }
  content_types = ['url', 'content', 'path']

  docs.forEach(function(doc) {
    process.stdout.write(doc.title + '\n' + '\t- ' + doc.content + '\n')
  })
}
var cPrint = function(str) {
  process.stdout.write(str + '\n')
}
